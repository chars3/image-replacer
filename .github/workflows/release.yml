name: Build and Release

on:
  push:
    tags:
      - 'v*'
  
  # Opcional: Adicionar workflow de teste para pull requests
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: admin/js/package-lock.json

      - name: Install JS dependencies
        run: |
          cd admin/js
          npm ci

      - name: Run tests
        run: |
          cd admin/js
          npm run test
  
  build-and-release:
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: admin/js/package-lock.json

      - name: Install JS dependencies
        run: |
          cd admin/js
          npm ci

      - name: Build JS assets
        env:
          NODE_ENV: production
        run: |
          cd admin/js
          npm run build

      - name: Create release ZIP
        run: |
          mkdir -p image-replacer
          cp -r *.php includes admin image-replacer/
          [ -d languages ] && cp -r languages image-replacer/
          # Remove development files
          rm -rf image-replacer/admin/js/node_modules
          rm -rf image-replacer/admin/js/src
          rm -f image-replacer/admin/js/package*.json
          rm -f image-replacer/admin/js/tsconfig.json
          rm -f image-replacer/admin/js/vite.config.js
          rm -rf image-replacer/admin/js/__tests__
          rm -f image-replacer/admin/js/.gitignore
          # Create ZIP file
          zip -r image-replacer.zip image-replacer

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Image Replacer v${{ steps.get_version.outputs.VERSION }}
          files: image-replacer.zip
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}